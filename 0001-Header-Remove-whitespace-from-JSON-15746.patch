From f87e302cc85561a22d436e713f026173379950d3 Mon Sep 17 00:00:00 2001
From: Nick Sullivan <nick.sullivan@adhocteam.us>
Date: Tue, 26 Jan 2021 17:35:09 -0500
Subject: [PATCH] [Header] Remove whitespace from JSON (#15746)

* [Header] Remove whitespace from JSON

* Move script tag back down

* fix script tags

* adjust preview server to escape headerFooter JSON

* rm old code causing issue

* run linter

* lint again
---
 package.json                                  |  1 +
 script/preview.js                             | 35 ++++++----
 src/site/includes/header.html                 |  2 +-
 .../build/plugins/create-header-footer.js     | 65 +++----------------
 yarn.lock                                     |  5 ++
 5 files changed, 38 insertions(+), 70 deletions(-)

diff --git a/package.json b/package.json
index 0bcc92e559..4336882574 100644
--- a/package.json
+++ b/package.json
@@ -301,6 +301,7 @@
     "ics-js": "^0.10.2",
     "js-cookie": "^2.2.1",
     "js-yaml": "^3.14.0",
+    "jsesc": "^3.0.2",
     "jsonschema": "^1.1.1",
     "leaflet": "^1.6.0",
     "leaflet-control-geocoder": "^1.13.0",
diff --git a/script/preview.js b/script/preview.js
index 4672070469..1bffcfad27 100644
--- a/script/preview.js
+++ b/script/preview.js
@@ -6,6 +6,7 @@ const commandLineArgs = require('command-line-args');
 const path = require('path');
 const express = require('express');
 const proxy = require('express-http-proxy');
+const jsesc = require('jsesc');
 const createPipeline = require('../src/site/stages/preview');
 
 const getDrupalClient = require('../src/site/stages/build/drupal/api');
@@ -128,18 +129,19 @@ app.get('/preview', async (req, res, next) => {
           );
         },
       ),
-      fetch(
-        `${urls[options.buildtype]}/generated/drupalHeaderFooter.json`,
-      ).then(resp => {
-        if (resp.ok) {
-          return resp.json();
-        }
-        throw new Error(
-          `HTTP error when fetching header/footer data: ${resp.status} ${
-            resp.statusText
-          }`,
-        );
-      }),
+
+      fetch(`${urls[options.buildtype]}/generated/headerFooter.json`).then(
+        resp => {
+          if (resp.ok) {
+            return resp.json();
+          }
+          throw new Error(
+            `HTTP error when fetching header/footer data: ${resp.status} ${
+              resp.statusText
+            }`,
+          );
+        },
+      ),
     ];
 
     const [drupalData, fileManifest, headerFooterData] = await Promise.all(
@@ -179,15 +181,20 @@ app.get('/preview', async (req, res, next) => {
       `${compiledPage.entityBundle}.drupal.liquid`,
     );
 
+    const headerFooterDataSerialized = jsesc(JSON.stringify(headerFooterData), {
+      json: true,
+      isScriptContext: true,
+    });
+
     const files = {
       'generated/file-manifest.json': {
         path: 'generated/file-manifest.json',
-        contents: new Buffer(JSON.stringify(fileManifest)),
+        contents: Buffer.from(JSON.stringify(fileManifest)),
       },
       [drupalPath]: {
         ...fullPage,
         isPreview: true,
-        headerFooterData: new Buffer(JSON.stringify(headerFooterData)),
+        headerFooterData: headerFooterDataSerialized,
         drupalSite:
           DRUPALS.PUBLIC_URLS[options['drupal-address']] ||
           options['drupal-address'],
diff --git a/src/site/includes/header.html b/src/site/includes/header.html
index f00919c7e2..d8987c84e5 100644
--- a/src/site/includes/header.html
+++ b/src/site/includes/header.html
@@ -80,7 +80,7 @@
 
   <script nonce="**CSP_NONCE**" type="text/javascript">
     window.VetsGov = window.VetsGov || {};
-    window.VetsGov.headerFooter = {{ headerFooterData }};
+    window.VetsGov.headerFooter = JSON.parse({{ headerFooterData }});
   </script>
 
 </head>
diff --git a/src/site/stages/build/plugins/create-header-footer.js b/src/site/stages/build/plugins/create-header-footer.js
index e767d15642..d50daf1b2d 100644
--- a/src/site/stages/build/plugins/create-header-footer.js
+++ b/src/site/stages/build/plugins/create-header-footer.js
@@ -1,44 +1,11 @@
+const jsesc = require('jsesc');
+
 const footerData = require('../../../../platform/static-data/footer-links.json');
-const DRUPALS = require('../../../constants/drupals');
 
 const {
   formatHeaderData: convertDrupalHeaderData,
 } = require('../drupal/menus');
 
-function replaceWithDrupalLinks(data, files) {
-  let current = data;
-  if (Array.isArray(data)) {
-    // This means we're always creating a shallow copy of arrays, but
-    // that seems worth the complexity trade-off
-    current = data.map(item => replaceWithDrupalLinks(item, files));
-  } else if (!!current && typeof current === 'object') {
-    Object.keys(current).forEach(key => {
-      let newValue = current;
-
-      if (
-        key === 'href' &&
-        files[
-          `drupal${current[key]
-            .replace('https://www.va.gov', '')
-            .replace(/\/$/, '')}/index.html`
-        ]
-      ) {
-        newValue = current[key].replace('www.va.gov/', 'www.va.gov/drupal/');
-      } else {
-        newValue = replaceWithDrupalLinks(current[key], files);
-      }
-
-      if (newValue !== current[key]) {
-        current = Object.assign({}, current, {
-          [key]: newValue,
-        });
-      }
-    });
-  }
-
-  return current;
-}
-
 function createHeaderFooterData(buildOptions) {
   return (files, metalsmith, done) => {
     const megaMenuData = convertDrupalHeaderData(
@@ -51,31 +18,19 @@ function createHeaderFooterData(buildOptions) {
       megaMenuData,
     };
 
-    const serialized = JSON.stringify(headerFooter, null, 4);
-
-    const drupalMenu = DRUPALS.PREFIXED_ENVIRONMENTS.has(buildOptions.buildtype)
-      ? replaceWithDrupalLinks(headerFooter, files)
-      : headerFooter;
-    const drupalMenuSerialized = JSON.stringify(drupalMenu, null, 4);
+    const stringified = JSON.stringify(headerFooter);
 
-    Object.keys(files).forEach(file => {
-      if (files[file].isDrupalPage) {
-        // eslint-disable-next-line no-param-reassign
-        files[file].headerFooterData = drupalMenuSerialized;
-      } else {
-        // eslint-disable-next-line no-param-reassign
-        files[file].headerFooterData = serialized;
-      }
+    metalsmith.metadata({
+      headerFooterData: jsesc(stringified, {
+        json: true,
+        isScriptContext: true,
+      }),
+      ...metalsmith.metadata(),
     });
 
     // eslint-disable-next-line no-param-reassign
     files['generated/headerFooter.json'] = {
-      contents: new Buffer(serialized),
-    };
-
-    // eslint-disable-next-line no-param-reassign
-    files['generated/drupalHeaderFooter.json'] = {
-      contents: new Buffer(drupalMenuSerialized),
+      contents: Buffer.from(stringified),
     };
 
     done();
diff --git a/yarn.lock b/yarn.lock
index a33cf476ca..83de2bcf65 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -10701,6 +10701,11 @@ jsesc@^2.5.1:
   version "2.5.2"
   resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-2.5.2.tgz#80564d2e483dacf6e8ef209650a67df3f0c283a4"
 
+jsesc@^3.0.2:
+  version "3.0.2"
+  resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-3.0.2.tgz#bb8b09a6597ba426425f2e4a07245c3d00b9343e"
+  integrity sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==
+
 jsesc@~0.5.0:
   version "0.5.0"
   resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-0.5.0.tgz#e7dee66e35d6fc16f710fe91d5cf69f70f08911d"
-- 
2.30.0

